{"version":3,"sources":["users.js","helper.js","channels.js","groups.js","files.js","Dashboard.js","authProvider.js","dataProvider.js","MyLoginPage.js","MyUserMenu.js","MyAppBar.js","MyLayout.js","App.js","serviceWorker.js","index.js"],"names":["UserList","props","react_default","a","createElement","List","Datagrid","rowClick","FileField","label","source","title","target","TextField","ImageField","Helper","id","name","unixtimestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","getSeconds","byte","Math","pow","toFixed","b","field","valA","valB","tempArray","split","length","array","cmp","stabilizedThis","map","el","index","sort","order","_this","this","desc","ChannelList","FunctionField","render","record","convertDate","created","GroupList","FileList","Object","assign","filters","files_FileFilter","Responsive","small","SimpleList","primaryText","secondaryText","m_users","tertiaryText","toLocaleDateString","medium","files_FileDatagrid","src","ArrayField","sortable","SingleFieldList","ChipField","toSizeString","size","DateField","locales","FileFilter","Filter","TextInput","alwaysOn","AutocompleteArrayInput","choices","JSON","parse","sessionStorage","getItem","allowEmpty","getFileTypes","FileDatagridRow","_ref","resource","onToggleItem","children","selected","basePath","TableRow_default","key","TableCell_default","padding","user","localStorage","user_id","Checkbox_default","checked","onClick","React","Children","concat","cloneElement","FileDatagridBody","DatagridBody","row","files_FileDatagridRow","FileDatagrid","body","files_FileDatagridBody","Dashboard","Card_default","CardHeader_default","CardContent_default","authProvider","type","params","AUTH_LOGIN","username","setItem","Promise","resolve","AUTH_LOGOUT","clear","AUTH_ERROR","status","removeItem","reject","AUTH_CHECK","API_URL","TOKEN","access_token","PREFIX","dataProvider","fileIds","console","group","log","groupEnd","GET_LIST","window","demo","handleData","storageObject","all","getAllChannels","getAllUsers","then","values","listChannels","listUsers","allChannels","allUsers","get","response","listFiles","files","result","i","getUserNameByFile","getChannelNamesByFile","stringify","allFiles","users","channels","groups","DELETE_MANY","ids","_loop2","fetch","method","res","filter","file","includes","data","value","filterKeys","keys","_i","_filterKeys","Array","isArray","isCheckArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","v","filterDataArray","err","return","searchDataArray","hasOwnProperty","document","getElementById","childNodes","innerHTML","getSizeOfListFile","addEventListener","list","stableSort","getSorting","_params$pagination","pagination","page","perPage","total","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","filterValue","dataArray","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","toLowerCase","indexOf","startSlice","endSlice","slice","members","j","uniqueChannels","item","pos","_loop","find","obj","error","push","aStyle","position","left","top","MyLoginPage","submit","e","preventDefault","userLogin","style","href","alt","height","width","srcSet","Component","connect","MyCustomIcon","withStyles","avatar","classes","Avatar_default","className","profile","image_32","MyUserMenu","UserMenu","icon","MenuItemLink","to","leftIcon","Settings_default","MyAppBar","flex","textOverflow","whiteSpace","overflow","spacer","objectWithoutProperties","AppBar","userMenu","src_MyUserMenu","Typography_default","variant","color","display_name","MyLayout","Layout","appBar","App","Admin","appLayout","loginPage","dashboard","Resource","FileIcon","UserIcon","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e76e5539.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Datagrid, TextField, ImageField, FileField } from 'react-admin';\n\nexport const UserList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <FileField label=\"File\" source=\"profile.image_original\" title=\"avatar\" target=\"_blank\" />\n            <TextField source=\"id\" label=\"Id\" />\n            <ImageField source=\"profile.image_72\" label=\"Avatar\" />\n            <TextField source=\"name\" label=\"user\" />\n            <TextField source=\"profile.display_name\" label=\"Display name\" />\n        </Datagrid>\n    </List>\n);","class Helper{\n    static getFileTypes(){\n        return [\n            {id: 'jpg', name: 'jpg'},\n            {id: 'png', name: 'png'},\n            {id: 'gif', name: 'gif'},\n            {id: 'zip', name: 'zip'},\n            {id: 'text', name: 'text'},\n            {id: 'doc', name: 'doc'},\n            {id: 'docx', name: 'docx'},\n            {id: 'pdf', name: 'pdf'},\n            {id: 'mp4', name: 'mp4'}\n        ];\n    }\n\n    static convertDate(unixtimestamp){\n        // Months array\n        const months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n        // Convert timestamp to milliseconds\n        var date = new Date(unixtimestamp*1000);\n        // Year\n        var year = date.getFullYear();\n        // Month\n        // var month = months_arr[date.getMonth()];\n        var month = date.getMonth() + 1;\n        // Day\n        var day = date.getDate();\n        // Hours\n        var hours = date.getHours();\n        // Minutes\n        var minutes = \"0\" + date.getMinutes();\n        // Seconds\n        var seconds = \"0\" + date.getSeconds();\n        // Display date time in dd-MM-yyyy format\n        return day + '-' + month + '-' + year;\n    }\n\n    static toSizeString(byte) {\n        if (byte < Math.pow(2, 10)) {\n            return byte + ' B';\n        } else if (byte < Math.pow(2, 20)) {\n            return (byte / Math.pow(2, 10)).toFixed(0) + ' kB';\n        } else if (byte < Math.pow(2, 30)) {\n            return (byte / Math.pow(2, 20)).toFixed(2) + ' MB';\n        } else if (byte < Math.pow(2, 40)) {\n            return (byte / Math.pow(2, 30)).toFixed(2) + ' GB';\n        }\n    }\n\n    // Sorting\n    static desc(a, b, field) {\n        let valA = a[field];\n        let valB = b[field];\n        let tempArray = field.split('.');\n        if (tempArray.length === 2) {\n            valA = a[tempArray[0]][tempArray[1]];\n            valB = b[tempArray[0]][tempArray[1]];\n        }\n        if (valB < valA) {\n            return -1;\n        }\n        if (valB > valA) {\n            return 1;\n        }\n        return 0;\n      }\n      \n    static stableSort(array, cmp) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = cmp(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map(el => el[0]);\n    }\n    \n    static getSorting(order, field) {\n        return order == 'DESC' ? (a, b) => this.desc(a, b, field) : (a, b) => -(this.desc(a, b, field));\n    }\n    // End of sorting\n\n}\n\nexport default Helper;","// in src/channels.js\nimport React from 'react';\nimport { List, Datagrid, TextField, FunctionField } from 'react-admin';\nimport Helper from './helper.js';\n\nexport const ChannelList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"name\" label=\"Name\" />\n            <FunctionField source=\"created\" label=\"Created\" render={record => Helper.convertDate(record.created)}/>\n        </Datagrid>\n    </List>\n);","// in src/groups.js\nimport React from 'react';\nimport { List, Datagrid, TextField, FunctionField } from 'react-admin';\nimport Helper from './helper.js';\n\nexport const GroupList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"name\" label=\"Name\" />\n            <FunctionField source=\"created\" label=\"Created\" render={record => Helper.convertDate(record.created)}/>\n        </Datagrid>\n    </List>\n);","// in src/files.js\nimport React from 'react';\nimport { List, Filter, Datagrid, DatagridBody, Responsive, SimpleList, SingleFieldList } from 'react-admin';\nimport { TextField, ImageField, FunctionField, DateField, ArrayField, ChipField, FileField } from 'react-admin';\nimport { TextInput, SelectArrayInput, AutocompleteArrayInput } from 'react-admin';\nimport Helper from './helper.js';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport const FileList = props => (\n    <List filters={<FileFilter />} {...props} >\n        <Responsive\n            small={\n                <SimpleList\n                    primaryText={record => record.title}\n                    secondaryText={record => record.m_users}\n                    tertiaryText={record => new Date(record.created).toLocaleDateString()}\n                />\n            }\n            medium={\n                <FileDatagrid>\n                    <FileField label=\"File\" source=\"url_private\" src=\"url_private\" title=\"title\" target=\"_blank\" />\n                    <TextField label=\"User\" source=\"m_users\" />\n                    <ArrayField label=\"Channel\" source=\"m_channels\" sortable={false} >\n                        <SingleFieldList>\n                            <ChipField source=\"name\" />\n                        </SingleFieldList>\n                    </ArrayField>\n                    <ImageField label=\"Thumbnail\" source=\"thumb_80\" sortable={false} />\n                    <FunctionField source=\"size\" render={record => Helper.toSizeString(record.size)} />\n                    <DateField source=\"created\" locales=\"fr-FR\"/>\n                </FileDatagrid>\n            }\n        />\n    </List>\n);\n\nconst FileFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"name\" alwaysOn />\n        <AutocompleteArrayInput source=\"user\" choices={ JSON.parse(sessionStorage.getItem('users')) } allowEmpty />\n        <AutocompleteArrayInput source=\"channels\" choices={ JSON.parse(sessionStorage.getItem('channels')) } allowEmpty />\n        <AutocompleteArrayInput source=\"filetype\" choices={ Helper.getFileTypes() } allowEmpty/>\n    </Filter>\n);\n\nconst FileDatagridRow = ({ record, resource, id, onToggleItem, children, selected, basePath }) => (\n    <TableRow key={id}>\n        {/* first column: selection checkbox */}\n        <TableCell padding=\"none\">\n            {record.user === JSON.parse(localStorage.getItem('auth')).user_id && <Checkbox\n                checked={selected}\n                onClick={() => onToggleItem(id)}\n            />}\n        </TableCell>\n        {/* data columns based on children */}\n        {React.Children.map(children, field => (\n            <TableCell key={`${id}-${field.props.source}`}>\n                {React.cloneElement(field, {\n                    record,\n                    basePath,\n                    resource,\n                })}\n            </TableCell>\n        ))}\n    </TableRow>\n)\n\nconst FileDatagridBody = props => <DatagridBody {...props} row={<FileDatagridRow />} />;\nconst FileDatagrid = props => <Datagrid {...props} body={<FileDatagridBody />} />;","// in src/Dashboard.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","// in src/authProvider.js\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\n\nexport default (type, params) => {\n    // called when the user attempts to log in\n    if (type === AUTH_LOGIN) {\n        const { username } = params;\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    }\n    // called when the user clicks on the logout button\n    if (type === AUTH_LOGOUT) {\n        localStorage.clear();\n        sessionStorage.clear();\n        return Promise.resolve();\n    }\n    // called when the API returns an error\n    if (type === AUTH_ERROR) {\n        const { status } = params;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    // called when the user navigates to a new location\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('auth')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unknown method');\n};","// in src/dataProvider\nimport {\n    GET_LIST,\n    GET_ONE,\n    GET_MANY,\n    GET_MANY_REFERENCE,\n    CREATE,\n    UPDATE,\n    DELETE_MANY,\n    fetchUtils,\n} from 'react-admin';\n\nimport { get, post, put, del } from 'fetchutils';\nimport Helper from './helper.js';\n\nconst API_URL = 'https://slack.com/api';\nconst TOKEN = localStorage.getItem('auth') ? JSON.parse(localStorage.getItem('auth')).access_token : '';\nconst PREFIX = 'm_';\n\n/**\n * @param {string} type Request type, e.g GET_LIST, GET_MANY from react-admin\n * @param {string} resource Resource name, e.g. \"files\", \"users\"\n * @param {Object} payload Request parameters. Depends on the request type\n * @returns {Promise} the Promise for response\n */\nexport default (type, resource, params) => {\n    if (!TOKEN) return;\n    console.group(\"============== dataProvider =============\");\n    console.log(type);\n    console.log(resource);\n    console.log(params);\n    console.groupEnd();\n\n    switch(type) {\n        case GET_LIST:\n            switch(resource) {\n                case \"files\":\n                    if (window.demo) {\n                        return handleData(params, window.demo);\n                    } else if (sessionStorage.getItem('files')) {\n                        let storageObject = JSON.parse(sessionStorage.getItem('files'));\n                        return handleData(params, storageObject);\n                    }\n                    return Promise.all([getAllChannels(), getAllUsers()]).then(values => {\n                        let allChannels = values[0];\n                        let allUsers = values[1];\n                        return getAllFiles(allChannels, allUsers).then(allFiles => {\n                            return handleData(params, allFiles);\n                        });\n                    })\n                case \"users\":\n                    return getAllUsers().then(users => {\n                        return handleData(params, users);\n                    });\n                case \"channels\":\n                    return getAllChannels().then(channels => {\n                        return handleData(params, channels);\n                    });\n                case \"groups\":\n                    return getAllGroups().then(groups => {\n                        return handleData(params, groups);\n                    });\n            }\n            break;\n        // case GET_MANY:\n        case DELETE_MANY:\n            deleteFiles(params.ids);\n        default:\n            return;\n    }\n};\n\n/*\n * handleData: filter and sort data\n * params:\n * \n * output: { data: {Record[]}, total: {int} }\n */\n\nconst handleData = (params, data) => {\n    // Filter\n    data = data.filter(value => filter(value, params.filter));\n    if (Array.isArray(data) && data.length > 0) {\n        if (data[0].hasOwnProperty('filetype')) {\n            // Set text of span on AppBar: set total size\n            if (document.getElementById('react-admin-title')) {\n                document.getElementById('react-admin-title').childNodes[0].innerHTML = Helper.toSizeString(getSizeOfListFile(data));\n            } else {\n                document.addEventListener(\"DOMContentLoaded\", function() { \n                    document.getElementById('react-admin-title').childNodes[0].innerHTML = Helper.toSizeString(getSizeOfListFile(data));\n                });\n            }\n        }\n    }\n    // Sort\n    let list = Helper.stableSort(\n        data,\n        Helper.getSorting(params.sort.order, params.sort.field)\n    );\n    // Pagination\n    let {page, perPage} = params.pagination;\n    return {\n        data: pagination(page, perPage, list),\n        total: list.length\n    };\n}\n\nfunction getSizeOfListFile(files) {\n    let size = 0;\n    for (let file of files) {\n        size += file.size;\n    }\n    \n    return size;\n}\n\n\nfunction filter(data, filters) {\n    const filterKeys = Object.keys(filters);\n\n    for (let key of filterKeys) {\n        // check filter is array\n        if (Array.isArray(filters[key])) {\n            let isCheckArray = false;\n            for (let v of filters[key]) {\n                if (Array.isArray(data[key])) {\n                    if (filterDataArray(v, data[key])) {\n                        isCheckArray = true;\n                        break;\n                    }\n                } else if (data[key] === v) {\n                    isCheckArray = true;\n                    break;\n                }\n            }\n            if (!isCheckArray) return false;\n        } else if (Array.isArray(data[key])) {\n            if (!filterDataArray(filters[key], data[key])) return false;\n        } else if (data[key] !== filters[key]) {\n            if (!searchDataArray(filters[key], data[key])) return false;\n        }\n    }\n    \n    return true;\n}\n\nfunction filterDataArray(filterValue, dataArray) {\n    for (let v of dataArray) {\n        if (filterValue === v) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction searchDataArray(filterValue, dataArray) {\n    let check = dataArray.toLowerCase().indexOf(filterValue.toLowerCase());\n    if (check !== -1) {\n        return true;\n    }\n    return false;\n}\n\nconst pagination = (page, perPage, data) => {\n    page = page - 1;\n    let startSlice = page * perPage;\n    let endSlice = startSlice + perPage;\n    return data.slice(startSlice, endSlice);\n}\n\nfunction getAllChannels() {\n    return new Promise(function(resolve, reject) {\n        get(`${API_URL}/channels.list?token=${TOKEN}&count=1000`).then(response => {\n            sessionStorage.setItem('channels', JSON.stringify(response.channels));\n            resolve(response.channels);\n        });\n    })\n}\n\nfunction getAllGroups() {\n    return new Promise(function(resolve, reject) {\n        get(`${API_URL}/groups.list?token=${TOKEN}`).then(response => {\n            sessionStorage.setItem('groups', JSON.stringify(response.groups));\n            resolve(response.groups);\n        });\n    })\n}\n\nfunction getAllUsers() {\n    return new Promise(function(resolve, reject) {\n        get(`${API_URL}/users.list?token=${TOKEN}&count=1000`).then(response => {\n            sessionStorage.setItem('users', JSON.stringify(response.members));\n            resolve(response.members);\n        });\n    })\n}\n\n\nfunction getAllFiles(listChannels, listUsers) {\n    return new Promise(function(resolve, reject) {\n        get(`${API_URL}/files.list?token=${TOKEN}&count=1000`).then(response => {\n            let listFiles = response.files;\n            let result = [];\n            for (let i = 0; i < listFiles.length; i++) {\n                result[i] = listFiles[i];\n                // Convert timestamp to milliseconds for new Date(milliseconds)\n                result[i].created = result[i].created * 1000;\n                result[i][PREFIX + 'users'] = getUserNameByFile(listUsers, listFiles[i]);\n                result[i][PREFIX + 'channels'] = getChannelNamesByFile(listChannels, listFiles[i]);\n            }\n            sessionStorage.setItem('files', JSON.stringify(result));\n            resolve(result);\n        });\n    })\n}\n\n/**\n * get Name of User of File\n * \n * @param listUsers array\n * @param file object\n * @return string\n */\nfunction getUserNameByFile(listUsers, file) {\n    let result = 'no name';\n    for (let j = 0; j < listUsers.length; j++) {\n        if (file['user'] === listUsers[j]['id']) {\n            result = listUsers[j]['name'];\n            break;\n        }\n    }\n\n    return result;\n}\n\n/**\n * \n * @param {array} listChannels \n * @param {object} file \n * \n * @return array\n */\n\nfunction getChannelNamesByFile(listChannels, file) {\n    let uniqueChannels = file.channels.filter(function(item, pos) {\n        return file.channels.indexOf(item) == pos;\n    })\n    let result = [];\n\n    for (let i = 0; i < uniqueChannels.length; i++) {\n        for (let j = 0; j < listChannels.length; j++) {\n            if (uniqueChannels[i] === listChannels[j].id) {\n                if (result.find(obj => obj.id === listChannels[j].id)) {\n                    console.error(file);\n                }\n                result.push({\n                    id: listChannels[j].id,\n                    name: listChannels[j].name\n                });\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction deleteFiles(fileIds) {\n    return new Promise(function(resolve, reject) {\n        let files = fileIds;\n        for (let i=0; i < fileIds.length; i++) {\n            fetch(`${API_URL}/files.delete?token=${TOKEN}&file=${fileIds[i]}`, {method: 'post'}).then(res => {\n                files = fileIds.filter(file => file !== fileIds[i]);\n            });\n        }\n        let allFiles = JSON.parse(sessionStorage.getItem('files')).filter(file => {\n            return !files.includes(file.id);\n        });\n        sessionStorage.setItem('files', JSON.stringify(allFiles));\n        window.demo = allFiles;\n    })\n}","// in src/MyLoginPage.js\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { userLogin } from 'admin-on-rest';\n\nimport './Login.css';\n\nconst aStyle = {\n    position: 'absolute',\n    left: 'calc(50% - 172px/2)',\n    top: 'calc(50% - 43px/2)'\n}\n\nclass MyLoginPage extends Component {\n    submit = (e) => {\n        e.preventDefault();\n        // gather your data/credentials here\n        const credentials = { };\n\n        // Dispatch the userLogin action (injected by connect)\n        this.props.userLogin(credentials);\n    }\n\n    render() {\n        return (\n            <a style={aStyle} href=\"https://slack.com/oauth/authorize?\n                scope=files%3Awrite%3Auser+users%3Aread+files%3Aread+search%3Aread+channels%3Aread+groups%3Aread\n                &client_id=231613720450.347038352342\">\n                <img alt=\"Sign in with Slack\"\n                height=\"40\" width=\"172\"\n                src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n                srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\" />\n            </a>\n        );\n    }\n};\n\nexport default connect(undefined, { userLogin })(MyLoginPage);","import React from 'react';\nimport { AppBar, UserMenu, MenuItemLink } from 'react-admin';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst myCustomIconStyle = {\n    avatar: {\n        height: 30,\n        width: 30,\n    },\n};\n\nconst MyCustomIcon = withStyles(myCustomIconStyle)(\n    ({ classes }) => (\n        <div>\n            <Avatar\n                id=\"avatar\"\n                className={classes.avatar}\n                src={localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).user.profile.image_32 : ''}\n            />\n        </div>\n    )\n);\n\nconst MyUserMenu = props => (\n    <UserMenu {...props} icon={<MyCustomIcon />}>\n        <MenuItemLink\n            to=\"/configuration\"\n            primaryText=\"Configuration\"\n            leftIcon={<SettingsIcon />}\n        />\n    </UserMenu>\n);\n\nexport default MyUserMenu;","import React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport MyUserMenu from './MyUserMenu';\n\nconst styles = {\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n};\n\nconst MyAppBar = withStyles(styles)(({ classes, ...props }) => (\n    <AppBar {...props} userMenu={<MyUserMenu />}>\n        <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.title}\n            id=\"react-admin-title\"\n        />\n        <span id=\"react-admin-header\" className={classes.spacer}>{(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')).user.profile.display_name : ''}</span>\n    </AppBar>\n));\n\nexport default MyAppBar;","import React from 'react';\nimport { Layout } from 'react-admin';\nimport MyAppBar from './MyAppBar';\n\nconst MyLayout = (props) => <Layout {...props} appBar={MyAppBar} />;\n\nexport default MyLayout;","import React from 'react';\nimport './App.css';\nimport { Admin, Resource } from 'react-admin';\nimport { UserList } from './users';\nimport { ChannelList } from './channels';\nimport { GroupList } from './groups';\nimport { FileList } from './files';\nimport UserIcon from '@material-ui/icons/Group';\nimport FileIcon from '@material-ui/icons/FileUpload';\nimport Dashboard from './Dashboard';\nimport authProvider from './authProvider';\nimport dataProvider from './dataProvider';\nimport MyLoginPage from './MyLoginPage';\nimport MyLayout from './MyLayout';\n\nconst App = () => (\n  <Admin appLayout={MyLayout} loginPage={MyLoginPage} dashboard={Dashboard} authProvider={authProvider} dataProvider={dataProvider}>\n    <Resource name=\"files\" list={FileList} icon={FileIcon} />\n    <Resource name=\"users\" list={UserList} icon={UserIcon} />\n    <Resource name=\"channels\" list={ChannelList} icon={UserIcon} />\n    <Resource name=\"groups\" list={GroupList} icon={UserIcon} />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// serviceWorker.register();\n"],"sourceRoot":""}